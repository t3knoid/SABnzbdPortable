---
name: Publish Release

on:
  workflow_dispatch:
    inputs:
        run_id:
            description: 'Workflow run ID to fetch artifact from'
            required: false
        tag:
            description: 'Tag name for the release'
            required: true
        release_name:
            description: 'Release title'
            required: true
        build_workflow:
            description: 'Name of the build workflow (YAML filename without .yml)'
            required: true
            default: 'package-sabnzbd'

jobs:
    publish:
        runs-on: ubuntu-latest
        
        steps:
            - name: Get latest successful run ID for build workflow
              id: resolve_run
              uses: actions/github-script@v7
              with:
                script: |
                    const inputRunId = `${{ github.event.inputs.run_id }}`;
                    if (inputRunId && inputRunId !== '') {
                        core.info(`Using provided run ID: ${inputRunId}`);
                        core.setOutput('run_id', inputRunId);
                    } else {
                        const workflowName = `${{ github.event.inputs.build_workflow }}.yml`;
                        const runs = await github.rest.actions.listWorkflowRuns({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        workflow_id: workflowName,
                        status: 'success',
                        per_page: 1
                    });
                    if (runs.data.workflow_runs.length === 0) {
                        core.setFailed(`No successful runs found for workflow: ${workflowName}`);
                    } else {
                        const latestRunId = runs.data.workflow_runs[0].id;
                        core.info(`Using latest successful run ID: ${latestRunId}`);
                        core.setOutput('run_id', latestRunId);
                    }

            - name: Download release artifact along with manifest
              uses: actions/download-artifact@v4
              with:
                name: SABnzbdPortableInstaller
                path: ./release
                run-id: ${{ steps.resolve_run.outputs.run_id }}

            - name: Parse release-manifest.json
              id: metadata
              shell: bash
              run: |
                manifest="./release/release-manifest.json"
                version=$(jq -r .version "$manifest")
                build=$(jq -r .build "$manifest")
                tag=$(jq -r .tag "$manifest")
                artifact=$(jq -r .artifact "$manifest")
                echo "version=$version" >> $GITHUB_OUTPUT
                echo "build=$build" >> $GITHUB_OUTPUT
                echo "tag=$tag" >> $GITHUB_OUTPUT
                echo "artifact=$artifact" >> $GITHUB_OUTPUT

            - name: Create GitHub Release
              id: create_release
              uses: actions/create-release@v1
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                tag_name: ${{ github.event.inputs.tag }}
                release_name: ${{ github.event.inputs.release_name }}
                draft: false
                prerelease: false

            - name: Upload installer to release
              uses: softprops/action-gh-release@v1
              with:
                tag_name: ${{ steps.metadata.outputs.tag }}
                name: ${{ steps.metadata.outputs.artifact }}
                files: |
                    ./release/SABnzbdPortable_*.paf.exe
                    ./release/release-manifest.json
